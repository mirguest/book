{"rating":{"max":10,"numRaters":36,"average":"7.0","min":0},"subtitle":"","author":["金斯伯格 (Dan Ginsburg)","Budi Purnomo"],"pubdate":"2015-2-1","tags":[{"count":38,"name":"OpenGL","title":"OpenGL"},{"count":19,"name":"图形学","title":"图形学"},{"count":9,"name":"游戏开发","title":"游戏开发"},{"count":7,"name":"计算机图形学","title":"计算机图形学"},{"count":4,"name":"翻译渣，史上之最。","title":"翻译渣，史上之最。"},{"count":3,"name":"编程","title":"编程"},{"count":3,"name":"C++","title":"C++"},{"count":2,"name":"代码","title":"代码"}],"origin_title":"OpenGL ES 3.0 Programming Guide, 2nd Ed.","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28096593.jpg","binding":"平装","translator":["姚军"],"catalog":"本书赞誉\n译者序\n序\n前言\n致谢\n第1章 OpenGL ES 3.0简介 1\n1.1 OpenGL ES 3.0 2\n1.1.1 顶点着色器 3\n1.1.2 图元装配 5\n1.1.3 光栅化 5\n1.1.4 片段着色器 6\n1.1.5 逐片段操作 7\n1.2 OpenGL ES 3.0新功能 8\n1.2.1 纹理 8\n1.2.2 着色器 10\n1.2.3 几何形状 11\n1.2.4 缓冲区对象 11\n1.2.5 帧缓冲区 12\n1.3 OpenGL ES 3.0和向后兼容性 12\n1.4 EGL 13\n1.4.1 使用OpenGL ES 3.0编程 14\n1.4.2 库和包含文件 14\n1.5 EGL命令语法 14\n1.6 OpenGL ES命令语法 15\n1.7 错误处理 16\n1.8 基本状态管理 16\n1.9 延伸阅读 17\n第2章 你好，三角形：一个OpenGL ES 3.0示例 18\n2.1 代码框架 18\n2.2 示例下载位置 19\n2.3 “你好，三角形”（Hello Triangle）示例 19\n2.4 使用OpenGL ES 3.0框架 23\n2.5 创建简单的顶点和片段着色器 24\n2.6 编译和加载着色器 25\n2.7 创建一个程序对象并链接着色器 26\n2.8 设置视口和清除颜色缓冲区 27\n2.9 加载几何形状和绘制图元 28\n2.10 显示后台缓冲区 29\n2.11 小结 29\n第3章 EGL简介 30\n3.1 与窗口系统通信 30\n3.2 检查错误 31\n3.3 初始化EGL 32\n3.4 确定可用表面配置 32\n3.5 查询EGLConfig属性 33\n3.6 让EGL选择配置 35\n3.7 创建屏幕上的渲染区域：EGL窗口 37\n3.8 创建屏幕外渲染区域：EGL Pbuffer 39\n3.9 创建一个渲染上下文 42\n3.10 指定某个EGLContext为当前上下文 43\n3.11 结合所有EGL知识 44\n3.12 同步渲染 46\n3.13 小结 46\n第4章 着色器和程序 47\n4.1 着色器和程序 47\n4.1.1 创建和编译一个着色器 48\n4.1.2 创建和链接程序 51\n4.2 统一变量和属性 54\n4.2.1 获取和设置统一变量 55\n4.2.2 统一变量缓冲区对象 60\n4.2.3 获取和设置属性 64\n4.3 着色器编译器 64\n4.4 程序二进制码 65\n4.5 小结 66\n第5章 OpenGL ES着色语言 67\n5.1 OpenGL ES着色语言基础知识 67\n5.2 着色器版本规范 68\n5.3 变量和变量类型 68\n5.4 变量构造器 69\n5.5 向量和矩阵分量 70\n5.6 常量 71\n5.7 结构 71\n5.8 数组 72\n5.9 运算符 72\n5.10 函数 73\n5.11 内建函数 74\n5.12 控制流语句 74\n5.13 统一变量 75\n5.14 统一变量块 75\n5.15 顶点和片段着色器输入\/输出 77\n5.16 插值限定符 79\n5.17 预处理器和指令 80\n5.18 统一变量和插值器打包 81\n5.19 精度限定符 82\n5.20 不变性 83\n5.21 小结 85\n第6章 顶点属性、顶点数组和缓冲区对象 87\n6.1 指定顶点属性数据 87\n6.1.1 常量顶点属性 88\n6.1.2 顶点数组 88\n6.2 在顶点着色器中声明顶点属性变量 95\n6.3 顶点缓冲区对象 98\n6.4 顶点数组对象 106\n6.5 映射缓冲区对象 109\n6.6 复制缓冲区对象 112\n6.7 小结 113\n第7章 图元装配和光栅化 114\n7.1 图元 114\n7.1.1 三角形 114\n7.1.2 直线 115\n7.1.3 点精灵 116\n7.2 绘制图元 117\n7.2.1 图元重启 119\n7.2.2 驱动顶点 119\n7.2.3 几何形状实例化 120\n7.2.4 性能提示 122\n7.3 图元装配 124\n7.3.1 坐标系统 124\n7.3.2 透视分割 126\n7.3.3 视口变换 126\n7.4 光栅化 127\n7.4.1 剔除 127\n7.4.2 多边形偏移 128\n7.5 遮挡查询 130\n7.6 小结 131\n第8章 顶点着色器 132\n8.1 顶点着色器概述 133\n8.1.1 顶点着色器内建变量 133\n8.1.2 精度限定符 135\n8.1.3 顶点着色器中的统一变量限制数量 136\n8.2 顶点着色器示例 138\n8.2.1 矩阵变换 139\n8.2.2 顶点着色器中的照明 141\n8.3 生成纹理坐标 145\n8.4 顶点蒙皮 146\n8.5 变换反馈 150\n8.6 顶点纹理 151\n8.7 将OpenGL ES 1.1顶点管线作为ES 3.0顶点着色器 152\n8.8 小结 159\n第9章 纹理 160\n9.1 纹理基础 160\n9.1.1 2D纹理 161\n9.1.2 立方图纹理 161\n9.1.3 3D纹理 162\n9.1.4 2D纹理数组 163\n9.1.5 纹理对象和纹理的加载 163\n9.1.6 纹理过滤和mip贴图 167\n9.1.7 自动mip贴图生成 171\n9.1.8 纹理坐标包装 172\n9.1.9 纹理调配 173\n9.1.10 纹理细节级别 173\n9.1.11 深度纹理对比（百分比渐进过滤） 174\n9.1.12 纹理格式 174\n9.1.13 在着色器中使用纹理 180\n9.1.14 使用立方图纹理的示例 182\n9.1.15 加载3D纹理和2D纹理数组 184\n9.2 压缩纹理 186\n9.3 纹理子图像规范 188\n9.4 从颜色缓冲区复制纹理数据 191\n9.5 采样器对象 193\n9.6 不可变纹理 195\n9.7 像素解包缓冲区对象 196\n9.8 小结 197\n第10章 片段着色器 198\n10.1 固定功能片段着色器 199\n10.2 片段着色器概述 200\n10.2.1 内建特殊变量 201\n10.2.2 内建常量 202\n10.2.3 精度限定符 202\n10.3 用着色器实现固定功能技术 203\n10.3.1 多重纹理 203\n10.3.2 雾化 204\n10.3.3 Alpha测试（使用Discard） 207\n10.3.4 用户裁剪平面 208\n10.4 小结 209\n第11章 片段操作 210\n11.1 缓冲区 211\n11.1.1 请求更多缓冲区 211\n11.1.2 清除缓冲区 212\n11.1.3 用掩码控制帧缓冲区的写入 213\n11.2 片段测试和操作 214\n11.2.1 使用剪裁测试 214\n11.2.2 模板缓冲区测试 215\n11.3 混合 220\n11.4 抖动 221\n11.5 多重采样抗锯齿 222\n11.6 在帧缓冲区读取和写入像素 223\n11.7 多重渲染目标 226\n11.8 小结 229\n第12章 帧缓冲区对象 230\n12.1 为什么使用帧缓冲区对象 230\n12.2 帧缓冲区和渲染缓冲区对象 231\n12.2.1 选择渲染缓冲区与纹理作为帧缓冲区附着的对比 232\n12.2.2 帧缓冲区对象与EGL表面的对比 232\n12.3 创建帧缓冲区和渲染缓冲区对象 233\n12.4 使用帧缓冲区对象 234\n12.4.1 多重采样渲染缓冲区 235\n12.4.2 渲染缓冲区格式 235\n12.5 使用帧缓冲区对象 237\n12.5.1 连接渲染缓冲区作为帧缓冲区附着 238\n12.5.2 连接一个2D纹理作为帧缓冲区附着 238\n12.5.3 连接3D纹理的一个图像作为帧缓冲区附着 240\n12.5.4 检查帧缓冲区完整性 241\n12.6 帧缓冲区位块传送 242\n12.7 帧缓冲区失效 243\n12.8 删除帧缓冲区和渲染缓冲区对象 244\n12.9 删除用作帧缓冲区附着的渲染缓冲区对象 245\n12.10 示例 246\n12.11 性能提示和技巧 251\n12.12 小结 251\n第13章 同步对象和栅栏 252\n13.1 刷新和结束 252\n13.2 为什么使用同步对象 253\n13.3 创建和删除同步对象 253\n13.4 等待和向同步对象发送信号 253\n13.5 示例 254\n13.6 小结 255\n第14章 OpenGL ES 3.0高级编程 256\n14.1 逐片段照明 256\n14.1.1 使用法线贴图的照明 257\n14.1.2 照明着色器 258\n14.1.3 照明方程式 260\n14.2 环境贴图 261\n14.3 使用点精灵的粒子系统 264\n14.3.1 粒子系统设置 264\n14.3.2 粒子系统顶点着色器 265\n14.3.3 粒子系统片段着色器 266\n14.4 使用变换反馈的粒子系统 268\n14.4.1 粒子系统渲染算法 269\n14.4.2 使用变换反馈发射粒子 269\n14.4.3 渲染粒子 273\n14.5 图像后处理 274\n14.5.1 渲染到纹理设置 274\n14.5.2 模糊片段着色器 274\n14.5.3 眩光 275\n14.6 投影纹理 276\n14.6.1 投影纹理基础 277\n14.6.2 投影纹理所用的矩阵 278\n14.6.3 投影聚光灯着色器 278\n14.7 使用3D纹理的噪声 281\n14.7.1 生成噪声 281\n14.7.2 使用噪声 285\n14.8 过程纹理 286\n14.8.1 过程纹理示例 287\n14.8.2 过程纹理的抗锯齿 289\n14.8.3 关于过程纹理的延伸阅读 291\n14.9 用顶点纹理读取渲染地形 291\n14.9.1 生成一个正方形的地形网格 292\n14.9.2 在顶点着色器中计算顶点法线并读取高度值 293\n14.9.3 大型地形渲染的延伸阅读 294\n14.10 使用深度纹理的阴影 294\n14.10.1 从光源位置渲染到深度纹理 294\n14.10.2 从眼睛位置用深度纹理渲染 297\n14.11 小结 299\n第15章 状态查询 300\n15.1 OpenGL ES 3.0实现字符串查询 300\n15.2 查询OpenGL ES实现决定的限制 301\n15.3 查询OpenGL ES状态 303\n15.4 提示 306\n15.5 实体名称查询 307\n15.6 不可编程操作控制和查询 307\n15.7 着色器和程序状态查询 308\n15.8 顶点属性查询 309\n15.9 纹理状态查询 310\n15.10 采样器查询 310\n15.11 异步对象查询 311\n15.12 同步对象查询 311\n15.13 顶点缓冲区查询 312\n15.14 渲染缓冲区和帧缓冲区状态查询 312\n15.15 小结 313\n第16章 OpenGL ES平台 314\n16.1 在包含Visual Studio的Microsoft Windows上构建 314\n16.2 在Ubuntu Linux上构建 316\n16.3 在Android 4.3+ NDK （C++）上构建 317\n16.3.1 先决条件 317\n16.3.2 用Android NDK构建示例代码 318\n16.4 在Android 4.3+ SDK上构建（Java） 318\n16.5 在iOS 7上构建 319\n16.5.1 先决条件 319\n16.5.2 用Xcode 5构建示例代码 319\n16.6 小结 320\n附录A GL_HALF_FLOAT 321\n附录B 内建函数 325\n附录C ES框架API 338","pages":"344","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28096593.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28096593.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28096593.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26414014\/","id":"26414014","publisher":"机械工业出版社","isbn10":"7111489152","isbn13":"9787111489153","title":"OpenGL ES 3.0编程指南","url":"https:\/\/api.douban.com\/v2\/book\/26414014","alt_title":"OpenGL ES 3.0 Programming Guide, 2nd Ed.","author_intro":"Dan Ginsburg，Upsample Software公司创始人，该软件公司提供3D图形和GPU计算的咨询服务。Dan参与撰写了多部著作，包括《OpenCL 编程指南》和《OpenGL Shading Language》（第3版）。在过去的工作中，Dan曾经开发OpenGL驱动程序、桌面和手持3D演示、GPU开发人员工具、3D医学显示和游戏。\nBudirijanto Purnomo，AMD公司高级软件架构师，领导跨越多个AMD软件栈的GPU调试和剖析技术的软件实现工作。他与多位AMD的软件和硬件架构师协作，定义用于调试和剖析GPU应用的未来硬件架构。他曾在国际会议上发表过许多与计算机图形技术相关的论文。\nDave Shreiner，ARM公司图形与GPU计算部门主管，自从OpenGL诞生之日起就积极地参与到它的开发当中。他创建了OpenGL的第一个商业培训课程，并且拥有超过20年的OpenGL编程教学经验。","summary":"","series":{"id":"12919","title":"华章程序员书库"},"price":"CNY 79.00"}