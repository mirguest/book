{"rating":{"max":10,"numRaters":21,"average":"8.4","min":0},"subtitle":"","author":["[英] Adrian Mouat"],"pubdate":"2017-4","tags":[{"count":29,"name":"docker","title":"docker"},{"count":17,"name":"DevOps","title":"DevOps"},{"count":13,"name":"Docker","title":"Docker"},{"count":8,"name":"运维","title":"运维"},{"count":6,"name":"编程","title":"编程"},{"count":5,"name":"计算机","title":"计算机"},{"count":2,"name":"♥自学编程","title":"♥自学编程"},{"count":2,"name":"●2018","title":"●2018"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29419090.jpg","binding":"平装","translator":["黄彦邦"],"catalog":"前言　　xi\n第一部分　背景与基础\n第1章　何谓容器，为何需要它　　3\n1.1　容器与虚拟机的比较　　4\n1.2　Docker与容器　　5\n1.3　Docker的历史　　7\n1.4　插件与基础设施　　8\n1.5　64位Linux　　9\n第2章　安装　　10\n2.1　在Linux上安装 Docker　　10\n2.1.1　将SELinux置于宽容模式下运行　　11\n2.1.2　不使用sudo命令执行 Docker　　11\n2.2　在 Mac OS及Windows上安装 Docker　　12\n2.3　快速确认　　13\n第3章　迈出第一步　　15\n3.1　运行第一个镜像　　15\n3.2　基本命令　　16\n3.3　通过Dockerfile创建镜像　　20\n3.4　使用寄存服务　　22\n3.5　使用Redis官方镜像　　24\n3.6　总结　　27\n第4章　Docker基本概念　　28\n4.1　Docker系统架构　　28\n4.1.1　底层技术　　29\n4.1.2　周边技术　　30\n4.1.3　Docker托管　　31\n4.2　镜像是如何生成的　　32\n4.2.1　构建环境的上下文　　32\n4.2.2　镜像层　　33\n4.2.3　缓存　　35\n4.2.4　基础镜像　　35\n4.2.5　Dockerfile指令　　37\n4.3　使容器与世界相连　　39\n4.4　容器互联　　40\n4.5　利用数据卷和数据容器管理数据　　41\n4.5.1　共享数据　　43\n4.5.2　数据容器　　44\n4.6　Docker常用命令　　45\n4.6.1　run命令　　46\n4.6.2　容器管理　　48\n4.6.3　Docker信息　　50\n4.6.4　容器信息　　50\n4.6.5　镜像管理　　52\n4.6.6　使用寄存服务器　　54\n4.7　总结　　55\n第二部分　Docker与软件生命周期\n第5章　在开发中应用Docker　　59\n5.1　说声“Hello World!”　　59\n5.2　通过Compose实现自动化　　67\n5.3　总结　　69\n第6章　创建一个简单的Web应用　　71\n6.1　创建一个基本网页　　72\n6.2　利用现有镜像　　73\n6.3　实现缓存功能　　78\n6.4　微服务　　81\n6.5　总结　　81\n第7章　镜像分发　　82\n7.1　镜像及镜像库的命名方式　　82\n7.2　Docker Hub　　83\n7.3　自动构建　　85\n7.4　私有分发　　86\n7.4.1　运行自己的寄存服务　　86\n7.4.2　商业寄存服务　　92\n7.5　缩减镜像大小　　92\n7.6　镜像出处　　94\n7.7　总结　　94\n第8章　Docker持续集成与测试　　95\n8.1　为identidock添加单元测试　　95\n8.2　创建Jenkins容器　　100\n8.3　推送镜像　　106\n8.3.1　给镜像正确的标签　　106\n8.3.2　准生产及生产环境　　108\n8.3.3　镜像数量激增的问题　　108\n8.3.4　使用Docker部署Jenkins slaves　　109\n8.4　备份Jenkins数据　　109\n8.5　持续集成的托管解决方案　　109\n8.6　测试与微服务　　110\n8.7　总结　　111\n第9章　部署容器　　113\n9.1　通过Docker Machine配置资源　　114\n9.2　使用代理　　117\n9.3　执行选项　　122\n9.3.1　shell脚本　　122\n9.3.2　使用进程管理器（或用systemd控制所有进程）　　124\n9.3.3　使用配置管理工具　　127\n9.4　主机配置　　130\n9.4.1　选择操作系统　　130\n9.4.2　选择存储驱动程序　　130\n9.5　专门的托管方案　　132\n9.5.1　Triton　　132\n9.5.2　谷歌容器引擎　　134\n9.5.3　亚马逊EC2容器服务　　135\n9.5.4　Giant Swarm　　136\n9.6　持久性数据和生产环境容器　　138\n9.7　分享秘密信息　　139\n9.7.1　在镜像中保存秘密信息　　139\n9.7.2　通过环境变量传递密钥　　139\n9.7.3　通过数据卷传递密钥　　140\n9.7.4　使用键值存储　　140\n9.8　网络连接　　141\n9.9　生产环境的寄存服务　　141\n9.10　持续部署\/交付　　141\n9.11　总结　　142\n第10章　日志记录和监控　　143\n10.1　日志记录　　144\n10.1.1　Docker默认的日志记录　　144\n10.1.2　日志汇总　　145\n10.1.3　使用ELK 进行日志记录　　146\n10.1.4　通过syslog实现日志管理　　155\n10.1.5　从文件抓取日志　　160\n10.2　监控和警报　　161\n10.2.1　使用Docker工具进行监测　　161\n10.2.2　cAdvisor　　162\n10.2.3　集群解决方案　　163\n10.3　商用的监听及日志记录解决方案　　166\n10.4　总结　　166\n第三部分　工具和技术\n第11章　联网和服务发现　　169\n11.1　大使容器　　170\n11.2　服务发现　　173\n11.2.1　etcd　　173\n11.2.2　SkyDNS　　177\n11.2.3　Consul　　181\n11.2.4　服务注册　　185\n11.2.5　其他解决方案　　186\n11.3　联网选项　　187\n11.3.1　网桥模式　　187\n11.3.2　主机模式　　188\n11.3.3　容器模式　　188\n11.3.4　 未联网模式　　188\n11.4　全新的Docker联网功能　　188\n11.5　网络解决方案　　190\n11.5.1　Overlay　　191\n11.5.2　Weave　　193\n11.5.3　Flannel　　196\n11.5.4　Calico项目　　201\n11.6　总结　　205\n第12章　编排、集群和管理　　207\n12.1　集群和编排工具　　208\n12.1.1　Swarm　　208\n12.1.2　fleet　　214\n12.1.3　Kubernetes　　219\n12.1.4　Mesos和Marathon　　226\n12.2　容器管理平台　　235\n12.2.1　Rancher　　236\n12.2.2　Clocker　　237\n12.2.3　Tutum　　238\n12.3　总结　　239\n第13章　容器安全与限制容器　　241\n13.1　需要考虑的事项　　242\n13.2　纵深防御　　244\n13.3　如何保护identidock　　245\n13.4　以主机隔离容器　　246\n13.5　进行更新　　246\n13.6　镜像出处　　249\n13.6.1　Docker摘要　　250\n13.6.2　Docker的内容信任机制　　250\n13.6.3　可复制及可信任的Dockerfile　　254\n13.7　安全建议　　256\n13.7.1　设置用户　　256\n13.7.2　限制容器联网　　257\n13.7.3　删除setuid和setgid的二进制文件　　258\n13.7.4　限制内存使用　　259\n13.7.5　限制CPU 使用　　260\n13.7.6　限制重新启动　　261\n13.7.7　限制文件系统　　261\n13.7.8　限制内核能力　　262\n13.7.9　应用资源限制　　263\n13.8　运行加固内核　　264\n13.9　Linux安全模块　　265\n13.9.1　SELinux　　265\n13.9.2　AppArmor　　268\n13.10　审核　　268\n13.11　事件响应　　269\n13.12　未来特性　　269\n13.13　总结　　270\n作者简介　　271\n关于封面　　271","pages":"288","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29419090.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29419090.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29419090.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27013734\/","id":"27013734","publisher":"人民邮电出版社","isbn10":"7115449570","isbn13":"9787115449573","title":"Docker开发指南","url":"https:\/\/api.douban.com\/v2\/book\/27013734","alt_title":"","author_intro":"作者简介：\nAdrian Mouat\nContainer Solutions公司首席科学家。参与过很多软件项目，既有小型的Web应用，也有大型数据分析软件。\n译者简介 ：\n黄彦邦（Anthony Wong）\nLinux开发专家，热衷于开源技术，从事Linux相关开发工作十多年，曾参与多个大型开源项目，如Debian GNU\/Linux和Ubuntu，提交补丁无数。以推动Debian系统中文化以及网站和文档翻译为目标，1998年成为中国首位Debian计划官方开发者。","summary":"Docker容器轻量和可移植的特性尤其适用于动态和分布式的环境，它的兴起给软件开发流程带来了一场革命。本书对Docker进行了全面讲解，包括开发、生产以至维护的整个软件生命周期，并对其中可能出现的一些问题进行了探讨，如软件版本差异、开发环境与生产环境的差异、系统安全问题，等等。","price":"79.00元"}