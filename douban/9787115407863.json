{"rating":{"max":10,"numRaters":26,"average":"9.0","min":0},"subtitle":"英文版","author":["Brian W. Kernighan","Rob Pike"],"pubdate":"2016-1-1","tags":[{"count":25,"name":"程序设计","title":"程序设计"},{"count":19,"name":"计算机","title":"计算机"},{"count":16,"name":"编程","title":"编程"},{"count":14,"name":"计算机科学","title":"计算机科学"},{"count":11,"name":"软件开发","title":"软件开发"},{"count":5,"name":"CS软件工程","title":"CS软件工程"},{"count":2,"name":"计算机科学与编程","title":"计算机科学与编程"},{"count":2,"name":"无index！","title":"无index！"}],"origin_title":"The practice of programming","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28386899.jpg","binding":"平装","translator":[],"catalog":"目录\nChapter　1: Style \/ 风格　1\n1.1　Names \/ 名字　3\n1.2　Expressions and Statements \/ 表达式和语句6\n1.3　Consistency and Idioms \/ 一致性和习惯用语10\n1.4　Function Macros \/ 函数宏17\n1.5　Magic Numbers \/ 幻数19\n1.6　Comments \/ 注释23\n1.7　Why Bother? \/ 为何要在风格方面费心　27\nChapter　2: Algorithms and Data Structures \/ 算法与数据结构29\n2.1　Searching \/ 检索30\n2.2　Sorting \/ 排序32\n2.3　Libraries \/ 库34\n2.4　A Java Quicksort \/ 一个Java快速排序实现37\n2.5　O-Notation \/ 大O记法40\n2.6　Growing Arrays \/ 自增长数组41\n2.7　Lists \/ 表44\n2.8　Trees \/ 树50\n2.9　Hash Tables \/ 散列表55\n2.10　Summary \/ 小结　58\nChapter　3: Design and Implementation \/ 设计与实现61\n3.1　The Markov Chain Algorithm \/ 马尔可夫链算法62\n3.2　Data Structure Alternatives \/ 在多种数据结构之间选择64\n3.3　Building the Data Structure in C \/ 使用C语言构建数据结构65\n3.4　Generating Output \/ 生成输出69\n3.5　Java　71\n3.6　C++　76\n3.7　Awk and Perl \/ Awk和Perl　78\n3.8　Performance \/ 性能80\n3.9　Lessons \/ 经验教训82\nChapter　4: Interfaces \/ 接口85\n4.1　Comma-Separated Values \/ 逗号分隔值86\n4.2　A Prototype Library \/ 一个原型库87\n4.3　A Library for Others \/ 一个给他人用的库91\n4.4　A C++ Implementation \/ 一个C++实现99\n4.5　Interface Principles \/ 接口原则103\n4.6　Resource Management \/ 资源管理106\n4.7　Abort, Retry, Fail?109\n4.8　User Interfaces \/ 用户界面113\nChapter　5: Debugging \/ 调试117\n5.1　Debuggers \/ 调试器　118\n5.2　Good Clues, Easy Bugs \/ 线索明显、易于发现的错误119\n5.3　No Clues, Hard Bugs \/ 线索不明、难以发现的错误123\n5.4　Last Resorts \/ 最后的手段127\n5.5　Non-reproducible Bugs \/ 不可重现的错误　130\n5.6　Debugging Tools \/ 调试工具131\n5.7　Other People's Bugs \/ 他人引入的错误　135\n5.8　Summary \/ 小结136\nChapter　6: Testing \/ 测试139\n6.1　Test as You Write the Code \/ 一边编码，一边测试140\n6.2　Systematic Testing \/ 系统化测试145\n6.3　Test Automation \/ 测试自动化149\n6.4　Test Scaffolds \/ 测试脚手架151\n6.5　Stress Tests \/ 压力测试155\n6.6　Tips for Testing \/ 测试心得158\n6.7　Who Does the Testing? \/ 谁来测试　159\n6.8　Testing the Markov Program \/ 马尔可夫程序的测试160\n6.9　Summary \/ 小结162\nChapter　7: Performance \/ 性能165\n7.1　A Bottleneck \/ 瓶颈166\n7.2　Timing and Profiling \/ 计时和剖析171\n7.3　Strategies for Speed \/ 加速策略175\n7.4　Tuning the Code \/ 代码调优178\n7.5　Space Efficiency \/ 空间利用率182\n7.6　Estimation \/ 评估184\n7.7　Summary \/ 小结187\nChapter　8: Portability \/ 可移植性189\n8.1　Language \/ 语言190\n8.2　Headers and Libraries \/ 头文件和库196\n8.3　Program Organization \/ 程序架构198\n8.4　Isolation \/ 隔离202\n8.5　Data Exchange \/ 数据交换203\n8.6　Byte Order \/ 字节序204\n8.7　Portability and Upgrade \/ 可移植性和升级207\n8.8　Internationalization \/ 国际化209\n8.9　Summary \/ 小结212\nChapter　9: Notation \/ 记法215\n9.1　Formatting Data \/ 数据格式化216\n9.2　Regular Expressions \/ 正则表达式222\n9.3　Programmable Tools \/ 可编程工具228\n9.4　Interpreters, Compilers, and Virtual Machines \/ 解释器、编译器和虚拟机　231\n9.5　Programs that Write Programs \/ 写程序的程序237\n9.6　Using Macros to Generate Code \/ 用宏生成代码240\n9.7　Compiling on the Fly \/ 运行中编译241\nEpilogue　\/ 后记247\nAppendix:　Collected Rules \/ 规则汇编249","pages":"251","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28386899.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28386899.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28386899.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26712028\/","id":"26712028","publisher":"人民邮电出版社","isbn10":"711540786X","isbn13":"9787115407863","title":"程序设计实践","url":"https:\/\/api.douban.com\/v2\/book\/26712028","alt_title":"The practice of programming","author_intro":"作者:[美] 布莱恩 W. 克尼汉（Brian W. Kernighan）罗勃·派克（Rob Pike） 译者:无\nBrain Kernighan计算机科学家，曾与UNIX的缔造者Ken Thompson和Dennis Ritchie一起在贝尔实验室工作。他也是AWK和AMPL程序设计语言的共同作者。“K&R C”和“AWK”中的“K”都是指“Kernighan”。2000年起，他在普林斯顿大学计算机科学系任教授，并任本科部代表。\nRob Pike 软件工程师。他在贝尔实验室任职期间，作为UNIX小组成员参与开发了Plan 9和Inferno操作系统以及Limbo程序设计语言。目前他在Google公司工作，参与了Go和Sawzall程序设计语言的开发。","summary":"本书是计算机科学方面的经典名著，由计算机界极具影响力的两位专家Brian W. Kernighan和Rob Pike合著。书的内容围绕程序设计实践中的一系列问题展开，讲述对于程序员有共性的知识，以帮助各程序员写出更高效的程序。本书从排错、测试、性能、可移植性、设计、界面、风格和记法等方面，讨论了程序设计中既具有实际意义又具有广泛意义的思想、技术和方法。\n本书值得每位梦想并努力成为程序员的人参考，值得每位计算机专业的学生和计算机工作者阅读，也适合作为程序设计高级课程的教材或参考书。","price":"49"}